
(function (global) {

	Editor.prototype.createDomElements = function (opts) {
		var element = document.createElement(opts.elementConfig.tag || 'div');
        if (opts.elementConfig.displayText) element.innerHTML = opts.elementConfig.displayText;
        element.id = opts.elementConfig['id'] || '';
        element.className = opts.elementConfig.hide || '';
        // Should go into the util function
        if (opts.elementConfig.attrs) {
            for (i in opts.elementConfig.attrs) {
                if (opts.elementConfig.attrs.hasOwnProperty(i)) {
                    element.setAttribute(i, opts.elementConfig.attrs[i]);
                }
            }
        }
        opts.parent.insertBefore(element, opts.parent.nextSibling);
        return element;
	}
	
	Editor.prototype.createPlaceholder = function () {
        var placeholderDiv = document.createElement('div');
        this.editor.insertBefore(placeholderDiv, this.editor.firstChild);

         // should come from .config file in the future
        this.placeholder = document.createElement('span');
        this.placeholder.className = 'placeholder';
        this.placeholder.innerHTML = 'Don\'t stand back. Start writing now..';
        placeholderDiv.insertBefore(this.placeholder, placeholderDiv.firstChild);
    }

    Editor.prototype.getConfigForKey = function (key, selektor) {
    	return selektor ? this.config.selektor[key] : this.config[key];
    }

    Editor.prototype.createSelektorBlock = function () {
    	if (this.config.selektor.hasOwnProperty('display') && this.config.selektor.display) {
    		var elementConfig = this.getConfigForKey('selektorBlock', true);
	        this.selektorBlock = this.createDomElements({elementConfig: elementConfig, parent: document.body});
	        this.createSelektorOptions();
    	}
    }

    Editor.prototype.createSelektorOptions = function () {
    	var opts = this.config.selektor.options;
    	for (var i in opts) {
    		if (opts.hasOwnProperty(i)) {
    			this[i] = this.createDomElements({elementConfig: opts[i], parent: this.selektorBlock});
    		}
    	}
    }


})(this);